{"version":3,"file":"webcam.min.js","sources":["../src/webcam.js"],"sourcesContent":["export default class Webcam {\n  constructor(\n    webcamElement,\n    facingMode = \"user\",\n    canvasElement = null,\n    snapSoundElement = null\n  ) {\n    this._webcamElement = webcamElement;\n    this._webcamElement.width = this._webcamElement.width || 640;\n    this._webcamElement.height =\n      this._webcamElement.height || this._webcamElement.width * (3 / 4);\n    this._facingMode = facingMode;\n    this._webcamList = [];\n    this._streamList = [];\n    this._selectedDeviceId = \"\";\n    this._canvasElement = canvasElement;\n    this._snapSoundElement = snapSoundElement;\n  }\n\n  get facingMode() {\n    return this._facingMode;\n  }\n\n  set facingMode(value) {\n    this._facingMode = value;\n  }\n\n  get webcamList() {\n    return this._webcamList;\n  }\n\n  get webcamCount() {\n    return this._webcamList.length;\n  }\n\n  get selectedDeviceId() {\n    return this._selectedDeviceId;\n  }\n\n  /* Get all video input devices info */\n  getVideoInputs(mediaDevices) {\n    this._webcamList = [];\n    mediaDevices.forEach((mediaDevice) => {\n      if (mediaDevice.kind === \"videoinput\") {\n        this._webcamList.push(mediaDevice);\n      }\n    });\n    if (this._webcamList.length == 1) {\n      this._facingMode = \"user\";\n    }\n    return this._webcamList;\n  }\n\n  /* Get media constraints */\n  getMediaConstraints() {\n    var videoConstraints = {};\n    if (this._selectedDeviceId == \"\") {\n      videoConstraints.facingMode = this._facingMode;\n    } else {\n      videoConstraints.deviceId = { exact: this._selectedDeviceId };\n    }\n    var constraints = {\n      video: videoConstraints,\n      audio: false,\n    };\n    return constraints;\n  }\n\n  /* Select camera based on facingMode */\n  selectCamera() {\n    for (let webcam of this._webcamList) {\n      if (\n        (this._facingMode == \"user\" &&\n          webcam.label.toLowerCase().includes(\"front\")) ||\n        (this._facingMode == \"enviroment\" &&\n          webcam.label.toLowerCase().includes(\"back\"))\n      ) {\n        this._selectedDeviceId = webcam.deviceId;\n        break;\n      }\n    }\n  }\n\n  /* Change Facing mode and selected camera */\n  flip() {\n    this._facingMode = this._facingMode == \"user\" ? \"enviroment\" : \"user\";\n    this._webcamElement.style.transform = \"\";\n    this.selectCamera();\n  }\n\n  /*\n      1. Get permission from user\n      2. Get all video input devices info\n      3. Select camera based on facingMode\n      4. Start stream\n    */\n  async start(startStream = true) {\n    return new Promise((resolve, reject) => {\n      this.stop();\n      navigator.mediaDevices\n        .getUserMedia(this.getMediaConstraints()) //get permisson from user\n        .then((stream) => {\n          this._streamList.push(stream);\n          this.info() //get all video input devices info\n            .then((webcams) => {\n              this.selectCamera(); //select camera based on facingMode\n              window.console.log(webcams);\n              if (startStream) {\n                this.stream()\n                  .then((facingMode) => {\n                    resolve(this._facingMode);\n                    window.console.log(facingMode);\n                  })\n                  .catch((error) => {\n                    reject(error);\n                  });\n              } else {\n                resolve(this._selectedDeviceId);\n              }\n            })\n            .catch((error) => {\n              reject(error);\n            });\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n  }\n\n  /* Get all video input devices info */\n  async info() {\n    return new Promise((resolve, reject) => {\n      navigator.mediaDevices\n        .enumerateDevices()\n        .then((devices) => {\n          this.getVideoInputs(devices);\n          resolve(this._webcamList);\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n  }\n\n  /* Start streaming webcam to video element */\n  async stream() {\n    return new Promise((resolve, reject) => {\n      navigator.mediaDevices\n        .getUserMedia(this.getMediaConstraints())\n        .then((stream) => {\n          this._streamList.push(stream);\n          this._webcamElement.srcObject = stream;\n          if (this._facingMode == \"user\") {\n            this._webcamElement.style.transform = \"scale(-1,1)\";\n          }\n          this._webcamElement.play();\n          resolve(this._facingMode);\n        })\n        .catch((error) => {\n          window.console.log(error);\n          reject(error);\n        });\n    });\n  }\n\n  /* Stop streaming webcam */\n  stop() {\n    this._streamList.forEach((stream) => {\n      stream.getTracks().forEach((track) => {\n        track.stop();\n      });\n    });\n  }\n\n  snap() {\n    if (this._canvasElement !== null) {\n      if (this._snapSoundElement !== null) {\n        this._snapSoundElement.play();\n      }\n      this._canvasElement.height = this._webcamElement.scrollHeight;\n      this._canvasElement.width = this._webcamElement.scrollWidth;\n      let context = this._canvasElement.getContext(\"2d\");\n      if (this._facingMode == \"user\") {\n        context.translate(this._canvasElement.width, 0);\n        context.scale(-1, 1);\n      }\n      context.clearRect(\n        0,\n        0,\n        this._canvasElement.width,\n        this._canvasElement.height\n      );\n      context.drawImage(\n        this._webcamElement,\n        0,\n        0,\n        this._canvasElement.width,\n        this._canvasElement.height\n      );\n      let data = this._canvasElement.toDataURL(\"image/png\");\n      return data;\n    } else {\n      throw \"canvas element is missing\";\n    }\n  }\n}\n"],"names":["Webcam","webcamElement","facingMode","canvasElement","snapSoundElement","_webcamElement","width","this","height","_facingMode","_webcamList","_streamList","_selectedDeviceId","_canvasElement","_snapSoundElement","value","length","mediaDevices","forEach","mediaDevice","kind","_this","push","videoConstraints","deviceId","exact","video","audio","webcam","label","toLowerCase","includes","style","transform","selectCamera","startStream","Promise","resolve","reject","_this2","stop","navigator","getUserMedia","getMediaConstraints","then","stream","info","webcams","window","console","log","catch","error","enumerateDevices","devices","_this3","getVideoInputs","_this4","srcObject","play","getTracks","track","scrollHeight","scrollWidth","context","getContext","translate","scale","clearRect","drawImage","toDataURL"],"mappings":"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"}