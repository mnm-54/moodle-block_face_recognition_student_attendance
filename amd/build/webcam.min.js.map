{"version":3,"sources":["../src/webcam.js"],"names":["Webcam","webcamElement","facingMode","canvasElement","snapSoundElement","_webcamElement","width","height","_facingMode","_webcamList","_streamList","_selectedDeviceId","_canvasElement","_snapSoundElement","mediaDevices","forEach","mediaDevice","kind","push","length","videoConstraints","deviceId","exact","video","audio","webcam","label","toLowerCase","includes","style","transform","selectCamera","startStream","Promise","resolve","reject","stop","navigator","getUserMedia","getMediaConstraints","then","stream","info","webcams","window","console","log","catch","error","enumerateDevices","devices","getVideoInputs","srcObject","play","getTracks","track","scrollHeight","scrollWidth","context","getContext","translate","scale","clearRect","drawImage","data","toDataURL","value"],"mappings":"2xDAAqBA,CAAAA,C,YACnB,WACEC,CADF,CAKE,IAHAC,CAAAA,CAGA,wDAHa,MAGb,CAFAC,CAEA,wDAFgB,IAEhB,CADAC,CACA,wDADmB,IACnB,WACA,KAAKC,cAAL,CAAsBJ,CAAtB,CACA,KAAKI,cAAL,CAAoBC,KAApB,CAA4B,KAAKD,cAAL,CAAoBC,KAApB,EAA6B,GAAzD,CACA,KAAKD,cAAL,CAAoBE,MAApB,CACE,KAAKF,cAAL,CAAoBE,MAApB,EAA8B,KAAKF,cAAL,CAAoBC,KAApB,EAA6B,EAAI,CAAjC,CADhC,CAEA,KAAKE,WAAL,CAAmBN,CAAnB,CACA,KAAKO,WAAL,CAAmB,EAAnB,CACA,KAAKC,WAAL,CAAmB,EAAnB,CACA,KAAKC,iBAAL,CAAyB,EAAzB,CACA,KAAKC,cAAL,CAAsBT,CAAtB,CACA,KAAKU,iBAAL,CAAyBT,CAC1B,C,yDAuBcU,C,CAAc,YAC3B,KAAKL,WAAL,CAAmB,EAAnB,CACAK,CAAY,CAACC,OAAb,CAAqB,SAACC,CAAD,CAAiB,CACpC,GAAyB,YAArB,GAAAA,CAAW,CAACC,IAAhB,CAAuC,CACrC,CAAI,CAACR,WAAL,CAAiBS,IAAjB,CAAsBF,CAAtB,CACD,CACF,CAJD,EAKA,GAA+B,CAA3B,OAAKP,WAAL,CAAiBU,MAArB,CAAkC,CAChC,KAAKX,WAAL,CAAmB,MACpB,CACD,MAAO,MAAKC,WACb,C,iEAGqB,CACpB,GAAIW,CAAAA,CAAgB,CAAG,EAAvB,CACA,GAA8B,EAA1B,OAAKT,iBAAT,CAAkC,CAChCS,CAAgB,CAAClB,UAAjB,CAA8B,KAAKM,WACpC,CAFD,IAEO,CACLY,CAAgB,CAACC,QAAjB,CAA4B,CAAEC,KAAK,CAAE,KAAKX,iBAAd,CAC7B,CAKD,MAJkB,CAChBY,KAAK,CAAEH,CADS,CAEhBI,KAAK,GAFW,CAKnB,C,mDAGc,SACM,KAAKf,WADX,QACb,2BAAqC,IAA5BgB,CAAAA,CAA4B,SACnC,GACuB,MAApB,OAAKjB,WAAL,EACCiB,CAAM,CAACC,KAAP,CAAaC,WAAb,GAA2BC,QAA3B,CAAoC,OAApC,CADF,EAEqB,YAApB,OAAKpB,WAAL,EACCiB,CAAM,CAACC,KAAP,CAAaC,WAAb,GAA2BC,QAA3B,CAAoC,MAApC,CAJJ,CAKE,CACA,KAAKjB,iBAAL,CAAyBc,CAAM,CAACJ,QAAhC,CACA,KACD,CACF,CAXY,+BAYd,C,mCAGM,CACL,KAAKb,WAAL,CAAuC,MAApB,OAAKA,WAAL,CAA6B,YAA7B,CAA4C,MAA/D,CACA,KAAKH,cAAL,CAAoBwB,KAApB,CAA0BC,SAA1B,CAAsC,EAAtC,CACA,KAAKC,YAAL,EACD,C,uLAQWC,C,4DACH,GAAIC,CAAAA,OAAJ,CAAY,SAACC,CAAD,CAAUC,CAAV,CAAqB,CACtC,CAAI,CAACC,IAAL,GACAC,SAAS,CAACvB,YAAV,CACGwB,YADH,CACgB,CAAI,CAACC,mBAAL,EADhB,EAEGC,IAFH,CAEQ,SAACC,CAAD,CAAY,CAChB,CAAI,CAAC/B,WAAL,CAAiBQ,IAAjB,CAAsBuB,CAAtB,EACA,CAAI,CAACC,IAAL,GACGF,IADH,CACQ,SAACG,CAAD,CAAa,CACjB,CAAI,CAACZ,YAAL,GACAa,MAAM,CAACC,OAAP,CAAeC,GAAf,CAAmBH,CAAnB,EACA,GAAIX,CAAJ,CAAiB,CACf,CAAI,CAACS,MAAL,GACGD,IADH,CACQ,SAACtC,CAAD,CAAgB,CACpBgC,CAAO,CAAC,CAAI,CAAC1B,WAAN,CAAP,CACAoC,MAAM,CAACC,OAAP,CAAeC,GAAf,CAAmB5C,CAAnB,CACD,CAJH,EAKG6C,KALH,CAKS,SAACC,CAAD,CAAW,CAChBb,CAAM,CAACa,CAAD,CACP,CAPH,CAQD,CATD,IASO,CACLd,CAAO,CAAC,CAAI,CAACvB,iBAAN,CACR,CACF,CAhBH,EAiBGoC,KAjBH,CAiBS,SAACC,CAAD,CAAW,CAChBb,CAAM,CAACa,CAAD,CACP,CAnBH,CAoBD,CAxBH,EAyBGD,KAzBH,CAyBS,SAACC,CAAD,CAAW,CAChBb,CAAM,CAACa,CAAD,CACP,CA3BH,CA4BD,CA9BM,C,wSAmCA,GAAIf,CAAAA,OAAJ,CAAY,SAACC,CAAD,CAAUC,CAAV,CAAqB,CACtCE,SAAS,CAACvB,YAAV,CACGmC,gBADH,GAEGT,IAFH,CAEQ,SAACU,CAAD,CAAa,CACjB,CAAI,CAACC,cAAL,CAAoBD,CAApB,EACAhB,CAAO,CAAC,CAAI,CAACzB,WAAN,CACR,CALH,EAMGsC,KANH,CAMS,SAACC,CAAD,CAAW,CAChBb,CAAM,CAACa,CAAD,CACP,CARH,CASD,CAVM,C,ySAeA,GAAIf,CAAAA,OAAJ,CAAY,SAACC,CAAD,CAAUC,CAAV,CAAqB,CACtCE,SAAS,CAACvB,YAAV,CACGwB,YADH,CACgB,CAAI,CAACC,mBAAL,EADhB,EAEGC,IAFH,CAEQ,SAACC,CAAD,CAAY,CAChB,CAAI,CAAC/B,WAAL,CAAiBQ,IAAjB,CAAsBuB,CAAtB,EACA,CAAI,CAACpC,cAAL,CAAoB+C,SAApB,CAAgCX,CAAhC,CACA,GAAwB,MAApB,EAAA,CAAI,CAACjC,WAAT,CAAgC,CAC9B,CAAI,CAACH,cAAL,CAAoBwB,KAApB,CAA0BC,SAA1B,CAAsC,aACvC,CACD,CAAI,CAACzB,cAAL,CAAoBgD,IAApB,GACAnB,CAAO,CAAC,CAAI,CAAC1B,WAAN,CACR,CAVH,EAWGuC,KAXH,CAWS,SAACC,CAAD,CAAW,CAChBJ,MAAM,CAACC,OAAP,CAAeC,GAAf,CAAmBE,CAAnB,EACAb,CAAM,CAACa,CAAD,CACP,CAdH,CAeD,CAhBM,C,2IAoBF,CACL,KAAKtC,WAAL,CAAiBK,OAAjB,CAAyB,SAAC0B,CAAD,CAAY,CACnCA,CAAM,CAACa,SAAP,GAAmBvC,OAAnB,CAA2B,SAACwC,CAAD,CAAW,CACpCA,CAAK,CAACnB,IAAN,EACD,CAFD,CAGD,CAJD,CAKD,C,mCAEM,CACL,GAA4B,IAAxB,QAAKxB,cAAT,CAAkC,CAChC,GAA+B,IAA3B,QAAKC,iBAAT,CAAqC,CACnC,KAAKA,iBAAL,CAAuBwC,IAAvB,EACD,CACD,KAAKzC,cAAL,CAAoBL,MAApB,CAA6B,KAAKF,cAAL,CAAoBmD,YAAjD,CACA,KAAK5C,cAAL,CAAoBN,KAApB,CAA4B,KAAKD,cAAL,CAAoBoD,WAAhD,CACA,GAAIC,CAAAA,CAAO,CAAG,KAAK9C,cAAL,CAAoB+C,UAApB,CAA+B,IAA/B,CAAd,CACA,GAAwB,MAApB,OAAKnD,WAAT,CAAgC,CAC9BkD,CAAO,CAACE,SAAR,CAAkB,KAAKhD,cAAL,CAAoBN,KAAtC,CAA6C,CAA7C,EACAoD,CAAO,CAACG,KAAR,CAAc,CAAC,CAAf,CAAkB,CAAlB,CACD,CACDH,CAAO,CAACI,SAAR,CACE,CADF,CAEE,CAFF,CAGE,KAAKlD,cAAL,CAAoBN,KAHtB,CAIE,KAAKM,cAAL,CAAoBL,MAJtB,EAMAmD,CAAO,CAACK,SAAR,CACE,KAAK1D,cADP,CAEE,CAFF,CAGE,CAHF,CAIE,KAAKO,cAAL,CAAoBN,KAJtB,CAKE,KAAKM,cAAL,CAAoBL,MALtB,EAOA,GAAIyD,CAAAA,CAAI,CAAG,KAAKpD,cAAL,CAAoBqD,SAApB,CAA8B,WAA9B,CAAX,CACA,MAAOD,CAAAA,CACR,CA1BD,IA0BO,CACL,KAAM,2BACP,CACF,C,sCA1LgB,CACf,MAAO,MAAKxD,WACb,C,kBAEc0D,C,CAAO,CACpB,KAAK1D,WAAL,CAAmB0D,CACpB,C,sCAEgB,CACf,MAAO,MAAKzD,WACb,C,uCAEiB,CAChB,MAAO,MAAKA,WAAL,CAAiBU,MACzB,C,4CAEsB,CACrB,MAAO,MAAKR,iBACb,C","sourcesContent":["export default class Webcam {\n  constructor(\n    webcamElement,\n    facingMode = \"user\",\n    canvasElement = null,\n    snapSoundElement = null\n  ) {\n    this._webcamElement = webcamElement;\n    this._webcamElement.width = this._webcamElement.width || 640;\n    this._webcamElement.height =\n      this._webcamElement.height || this._webcamElement.width * (3 / 4);\n    this._facingMode = facingMode;\n    this._webcamList = [];\n    this._streamList = [];\n    this._selectedDeviceId = \"\";\n    this._canvasElement = canvasElement;\n    this._snapSoundElement = snapSoundElement;\n  }\n\n  get facingMode() {\n    return this._facingMode;\n  }\n\n  set facingMode(value) {\n    this._facingMode = value;\n  }\n\n  get webcamList() {\n    return this._webcamList;\n  }\n\n  get webcamCount() {\n    return this._webcamList.length;\n  }\n\n  get selectedDeviceId() {\n    return this._selectedDeviceId;\n  }\n\n  /* Get all video input devices info */\n  getVideoInputs(mediaDevices) {\n    this._webcamList = [];\n    mediaDevices.forEach((mediaDevice) => {\n      if (mediaDevice.kind === \"videoinput\") {\n        this._webcamList.push(mediaDevice);\n      }\n    });\n    if (this._webcamList.length == 1) {\n      this._facingMode = \"user\";\n    }\n    return this._webcamList;\n  }\n\n  /* Get media constraints */\n  getMediaConstraints() {\n    var videoConstraints = {};\n    if (this._selectedDeviceId == \"\") {\n      videoConstraints.facingMode = this._facingMode;\n    } else {\n      videoConstraints.deviceId = { exact: this._selectedDeviceId };\n    }\n    var constraints = {\n      video: videoConstraints,\n      audio: false,\n    };\n    return constraints;\n  }\n\n  /* Select camera based on facingMode */\n  selectCamera() {\n    for (let webcam of this._webcamList) {\n      if (\n        (this._facingMode == \"user\" &&\n          webcam.label.toLowerCase().includes(\"front\")) ||\n        (this._facingMode == \"enviroment\" &&\n          webcam.label.toLowerCase().includes(\"back\"))\n      ) {\n        this._selectedDeviceId = webcam.deviceId;\n        break;\n      }\n    }\n  }\n\n  /* Change Facing mode and selected camera */\n  flip() {\n    this._facingMode = this._facingMode == \"user\" ? \"enviroment\" : \"user\";\n    this._webcamElement.style.transform = \"\";\n    this.selectCamera();\n  }\n\n  /*\n      1. Get permission from user\n      2. Get all video input devices info\n      3. Select camera based on facingMode\n      4. Start stream\n    */\n  async start(startStream = true) {\n    return new Promise((resolve, reject) => {\n      this.stop();\n      navigator.mediaDevices\n        .getUserMedia(this.getMediaConstraints()) //get permisson from user\n        .then((stream) => {\n          this._streamList.push(stream);\n          this.info() //get all video input devices info\n            .then((webcams) => {\n              this.selectCamera(); //select camera based on facingMode\n              window.console.log(webcams);\n              if (startStream) {\n                this.stream()\n                  .then((facingMode) => {\n                    resolve(this._facingMode);\n                    window.console.log(facingMode);\n                  })\n                  .catch((error) => {\n                    reject(error);\n                  });\n              } else {\n                resolve(this._selectedDeviceId);\n              }\n            })\n            .catch((error) => {\n              reject(error);\n            });\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n  }\n\n  /* Get all video input devices info */\n  async info() {\n    return new Promise((resolve, reject) => {\n      navigator.mediaDevices\n        .enumerateDevices()\n        .then((devices) => {\n          this.getVideoInputs(devices);\n          resolve(this._webcamList);\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n  }\n\n  /* Start streaming webcam to video element */\n  async stream() {\n    return new Promise((resolve, reject) => {\n      navigator.mediaDevices\n        .getUserMedia(this.getMediaConstraints())\n        .then((stream) => {\n          this._streamList.push(stream);\n          this._webcamElement.srcObject = stream;\n          if (this._facingMode == \"user\") {\n            this._webcamElement.style.transform = \"scale(-1,1)\";\n          }\n          this._webcamElement.play();\n          resolve(this._facingMode);\n        })\n        .catch((error) => {\n          window.console.log(error);\n          reject(error);\n        });\n    });\n  }\n\n  /* Stop streaming webcam */\n  stop() {\n    this._streamList.forEach((stream) => {\n      stream.getTracks().forEach((track) => {\n        track.stop();\n      });\n    });\n  }\n\n  snap() {\n    if (this._canvasElement !== null) {\n      if (this._snapSoundElement !== null) {\n        this._snapSoundElement.play();\n      }\n      this._canvasElement.height = this._webcamElement.scrollHeight;\n      this._canvasElement.width = this._webcamElement.scrollWidth;\n      let context = this._canvasElement.getContext(\"2d\");\n      if (this._facingMode == \"user\") {\n        context.translate(this._canvasElement.width, 0);\n        context.scale(-1, 1);\n      }\n      context.clearRect(\n        0,\n        0,\n        this._canvasElement.width,\n        this._canvasElement.height\n      );\n      context.drawImage(\n        this._webcamElement,\n        0,\n        0,\n        this._canvasElement.width,\n        this._canvasElement.height\n      );\n      let data = this._canvasElement.toDataURL(\"image/png\");\n      return data;\n    } else {\n      throw \"canvas element is missing\";\n    }\n  }\n}\n"],"file":"webcam.min.js"}